<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="fnjsw">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="fnjsw.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/fnjsw/mapper/*Mapper.xml" />
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="fnjsw.mapper" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />	

		<!-- 连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass">
				<value>${dataSource.driverClassName}</value>
			</property>
			<property name="jdbcUrl">
				<value>${dataSource.url}</value>
			</property>
			<property name="user">
				<value>${dataSource.username}</value>
			</property>
			<property name="password">
				<value>${dataSource.password}</value>
			</property>
			<!-- 最大连接数 -->
			<property name="maxPoolSize">
				<value>${dataSource.c3p0.max_size}</value>
			</property>
			<!-- 最小连接数 -->
			<property name="minPoolSize">
				<value>${dataSource.c3p0.min_size}</value>
			</property>
			<!-- 最大空闲时间，超时未被使用则连接被抛弃，单位毫秒 -->
			<property name="maxIdleTime">
				<value>${dataSource.c3p0.max_idle_time}</value>
			</property>
			<!-- 获得连接的超时时间,如果超过这个时间,会抛出异常，单位毫秒 -->
			<property name="checkoutTimeout">
				<value>${dataSource.c3p0.checkout_timeout}</value>
			</property>
			<!-- 最大的PreparedStatement的数量 -->
			<property name="maxStatements">
				<value>${dataSource.c3p0.max_statements}</value>
			</property>
			<!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒 -->
			<property name="idleConnectionTestPeriod">
				<value>${dataSource.c3p0.idle_test_period}</value>
			</property>
			<!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
			<property name="acquireIncrement">
				<value>${dataSource.c3p0.acquire_increment}</value>
			</property>
		</bean>
	</beans>

</beans>